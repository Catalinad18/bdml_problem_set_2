pkg <- list("dplyr", "readr", "tidyverse", "rio", "stargazer", "boot")
lapply(pkg, require, character.only = T)
lapply(pkg, require, character.only = T)
rm(pkg)
rm(list = ls())
-----------
test <- read_csv("stores/test.csv")
test <- read_csv("stores/test.csv")
train <- read_csv("stores/train.csv")
View(test)
ls())
rm(list = ls())
test_data <- read_csv("stores/test.csv")
train_data <- read_csv("stores/train.csv")
#Merge data
train_data <- train_data %>% mutate(type = "train")
test_data <- test_data %>% mutate(type = "test")
View(test_data)
View(train_data)
rbind(train_data, test_data)
table(data$type)
data <- rbind(train_data, test_data)
table(data$type)
install.packages("sf")
pkg <- list("dplyr", "tidyverse", "sf")
lapply(pkg, require, character.only = T)
rm(pkg)
sp_data <- st_as_sf(data, coords = c("lon", "lat"), crs = 4326)
leaflet() %>%
addTiles() %>%
addCircles(lng = sp_data$lon,
lat = sp_data$lat)
install.packages("leaflet")
pkg <- list("dplyr", "tidyverse", "sf", "leaflet")
lapply(pkg, require, character.only = T)
rm(pkg)
leaflet() %>%
addTiles() %>%
addCircles(lng = sp_data$lon,
lat = sp_data$lat)
install.packages("Rcpp")
install.packages("Rcpp")
pkg <- list("dplyr", "tidyverse", "sf", "leaflet", "Rcpp")
lapply(pkg, require, character.only = T)
rm(pkg)
leaflet() %>%
addTiles() %>%
addCircles(lng = sp_data$lon,
lat = sp_data$lat)
leaflet() %>%
addTiles() %>%
addCircles(lng = data$lon,
lat = data$lat)
leaflet() %>%
addTiles() %>%
addCircles(data = data,
col = lap(type))
leaflet() %>%
addTiles() %>%
addCircles(data = data,
col = pal(type))
leaflet() %>%
addTiles() %>%
addCircles(data = data)
leaflet() %>%
addTiles() %>%
addCircles(data = data,
color ~pal((type))
a
leaflet() %>%
addTiles() %>%
addCircles(data = data,
color = ~pal((type))
a
leaflet() %>%
addTiles() %>%
addCircles(data = data, color = ~pal((type))
a
leaflet() %>%
addTiles() %>%
addMarkers(data = data, color = ~pal((type))
a
leaflet() %>%
addTiles() %>%
addMarkers(data = data, color = ~(type))
leaflet() %>%
addTiles() %>%
addMarkers(data = data, color = ~type)
leaflet() %>%
addTiles() %>%
addMarkers(data = data, color = type)
leaflet() %>%
addTiles() %>%
addMarkers(data = data, color = data$type)
leaflet() %>%
addTiles() %>%
addCircles(data = data, color = data$type)
leaflet() %>%
addTiles() %>%
addCircles(data = data, color = ~lap(type))
leaflet() %>%
addTiles() %>%
addCircles(data = data, color = ~pal(type))
leaflet() %>%
addTiles() %>%
addCircles(data = data, color = ~palette(type))
leaflet() %>%
addTiles() %>%
addCircles(data = data, color = ~palette(as.factor(type)))
leaflet() %>%
addTiles() %>%
addCircles(data = data, color = ~palette(data$type))
leaflet() %>%
addTiles() %>%
addCircles(data = sp_data, color = ~palette(sp_data$type))
leaflet() %>%
addTiles() %>%
addCircles(data = sp_data, color = ~palette(type))
pal <- colorNumeric(
palette = c("red", "purple"),
domain = sp_data$type)
factpal <- colorFactor(topo.colors(2), sp_data$type)
leaflet() %>%
addTiles() %>%
addCircles(data = sp_data, color = ~factpal(type))
factpal <- colorFactor(palette = c("red", "purple"), sp_data$type)
leaflet() %>%
addTiles() %>%
addCircles(data = sp_data, color = ~factpal(type))
leaflet() %>%
addTiles() %>%
addCircles(data = sp_data, color = ~factpal(type), labels = palette())
leaflet() %>%
addTiles() %>%
addCircles(data = sp_data, color = ~factpal(type)) %>%
addLegend("bottomright", colors = c('red', 'purple'), values = ~type,
title = "Type of sample",
labels = c("Train", "Test"),
opacity = 1
)
tab(data$type)
table(data$type)
leaflet() %>%
addTiles() %>%
addCircles(data = sp_data, color = ~factpal(type)) %>%
addLegend("bottomright", colors = c('red', 'purple'), values = ~type,
title = "Type of sample",
labels = c("Test", "Train"),
opacity = 1
)
require(pacman)
p_load("dplyr", "tidyverse", "sf", "leaflet", "Rcpp", "rio", "plotly", "tmaptools", "osmdata",
"tidymodels", "ggmap", "tm", "udpipe", "stringi", "gdata")
# Clean environment
rm(list = ls())
#-------------------------------------------
# Load data ---------------------------------
test_data <- read_csv("stores/test.csv")
train_data <- read_csv("stores/train.csv")
#Append data
train_data <- train_data %>% mutate(type = "train")
test_data <- test_data %>% mutate(type = "test")
data <- rbind(train_data, test_data)
p_load("gmapsdistance")
centros_bogota <- c("Centro Internacional de Bogota", "Plaza de Mercado Corabastos, Bogota", "Torre Davivienda Centro Financiero, Bogota",
"Business Park Teleport Mizpah Group, Bogota", "Aeropuerto Internacional El Dorado, Bogota", "El Gran San, Bogota",
"Plaza de Mercado 7 de agosto fruver, Bogota", "Ciudad Empresarial Sarmiento Angulo, Bogota")
coordenadas_propiedades <- paste0(data$lat, ",", data$lon)
#Comenzamos únicamente con la Torre Davivienda (Para probar)
times_driving_cfinanciero <- c()
iteration <-1
for (p in coordenadas_propiedades){
iteration <- iteration+1
if (iteration%%100==0){
print(paste0("Iteration ", iteration))
}
results <- gmapsdistance(origin = p,
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-24", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
times_driving_cfinanciero <- c(times_driving_cfinanciero, results$Time)
}
Sys.getenv("GOOGLEGIDSTANCESKEY")
p_load("gmapsdistance")
Sys.setenv(GOOGLEGIDSTANCESKEY = "AIzaSyCI8LKrwuPP5V4ie89g4dAA7CMQu5nkFd8")
centros_bogota <- c("Centro Internacional de Bogota", "Plaza de Mercado Corabastos, Bogota", "Torre Davivienda Centro Financiero, Bogota",
"Business Park Teleport Mizpah Group, Bogota", "Aeropuerto Internacional El Dorado, Bogota", "El Gran San, Bogota",
"Plaza de Mercado 7 de agosto fruver, Bogota", "Ciudad Empresarial Sarmiento Angulo, Bogota")
coordenadas_propiedades <- paste0(data$lat, ",", data$lon)
#Comenzamos únicamente con la Torre Davivienda (Para probar)
times_driving_cfinanciero <- c()
iteration <-1
for (p in coordenadas_propiedades){
iteration <- iteration+1
if (iteration%%100==0){
print(paste0("Iteration ", iteration))
}
results <- gmapsdistance(origin = p,
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-24", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
times_driving_cfinanciero <- c(times_driving_cfinanciero, results$Time)
}
s
write_csv(times_driving_cfinanciero, "primeros 5017 cfinanciero.csv")
t <-data[1:5017, "property_id"]
t$time_cfinanciero <- times_driving_cfinanciero
write_csv(t, "primeros 5017 cfinanciero.csv")
coordenadas_propiedades[5018:]
coordenadas_propiedades[5018:length(coordenadas_propiedades)]
coordenadas_propiedades[5017]
coordenadas_propiedades[5018]
p_load("gmapsdistance")
Sys.setenv(GOOGLEGIDSTANCESKEY = "AIzaSyCI8LKrwuPP5V4ie89g4dAA7CMQu5nkFd8")
centros_bogota <- c("Centro Internacional de Bogota", "Plaza de Mercado Corabastos, Bogota", "Torre Davivienda Centro Financiero, Bogota",
"Business Park Teleport Mizpah Group, Bogota", "Aeropuerto Internacional El Dorado, Bogota", "El Gran San, Bogota",
"Plaza de Mercado 7 de agosto fruver, Bogota", "Ciudad Empresarial Sarmiento Angulo, Bogota")
coordenadas_propiedades <- paste0(data$lat, ",", data$lon)
#Comenzamos únicamente con la Torre Davivienda (Para probar)
times_driving_cfinanciero <- c()
iteration <-1
for (p in coordenadas_propiedades[5018:length(coordenadas_propiedades)]){
iteration <- iteration+1
if (iteration%%100==0){
print(paste0("Iteration ", iteration))
}
results <- gmapsdistance(origin = p,
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-24", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
times_driving_cfinanciero <- c(times_driving_cfinanciero, results$Time)
}
p_load("gmapsdistance")
Sys.setenv(GOOGLEGIDSTANCESKEY = "AIzaSyCI8LKrwuPP5V4ie89g4dAA7CMQu5nkFd8")
centros_bogota <- c("Centro Internacional de Bogota", "Plaza de Mercado Corabastos, Bogota", "Torre Davivienda Centro Financiero, Bogota",
"Business Park Teleport Mizpah Group, Bogota", "Aeropuerto Internacional El Dorado, Bogota", "El Gran San, Bogota",
"Plaza de Mercado 7 de agosto fruver, Bogota", "Ciudad Empresarial Sarmiento Angulo, Bogota")
coordenadas_propiedades <- paste0(data$lat, ",", data$lon)
#Comenzamos únicamente con la Torre Davivienda (Para probar)
times_driving_cfinanciero <- c()
iteration <-1
for (p in coordenadas_propiedades[5018:length(coordenadas_propiedades)]){
iteration <- iteration+1
if (iteration%%100==0){
print(paste0("Iteration ", iteration))
}
results <- gmapsdistance(origin = p,
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-25", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
times_driving_cfinanciero <- c(times_driving_cfinanciero, results$Time)
}
5018+3985
t <- cbind(data$property_id[5018:9003], times_driving_cfinanciero)
t <- cbind(data$property_id[5018:9002], times_driving_cfinanciero)
t <- cbind(data$property_id[5018:9002], times_driving_cfinanciero)
write_csv(t, "t2_til9002.csv")
t <- data.frame(cbind(data$property_id[5018:9002], times_driving_cfinanciero))
colnames(t) <- c("property_id", "time_cfinanciero")
write_csv(t, "t2_til9002.csv")
getwd()
results <- gmapsdistance(origin = p,
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-25", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
coordenadas_propiedades[9000:9010]
results <- gmapsdistance(origin = "4.703842,-74.067853",
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-25", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
results <- gmapsdistance(origin = "4.70384,-74.067853",
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-25", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
results <- gmapsdistance(origin = "4.641624,-74.154555",
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-25", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
results <- gmapsdistance(origin = "4.641624+-74.154555",
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-25", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
results <- gmapsdistance(origin = "4.641624,-74.154555",
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-25", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
results1 <- gmapsdistance(origin = "4.641624+-74.154555",
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-25", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
results$Time
results1$Time
results <- gmapsdistance(origin = "4.703842,-74.067853",
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-25", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
results <- gmapsdistance(origin = "4.70384+,-74.067853",
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-25", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
results <- gmapsdistance(origin = "4.70384+-74.067853",
destination = c("Torre Davivienda Centro Financiero, Bogota"),
mode = "driving",
combinations = "all",
traffic_model = "pessimistic",
dep_date = "2023-10-25", # provided as string in ISO 8601 format
dep_time = "12:00:00", # provided as string in HH:MM:SS format
key = Sys.getenv("GOOGLEGIDSTANCESKEY"))
